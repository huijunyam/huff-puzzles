/** 
 *  BASIC_BANK HUFF EXERCISE
 *  
 *  The task is to create a basic bank with huff
 * functionalities include
 *      - depositing tokens via similar to how solidity's `receive` function works
 *      - withdrawing tokens
 *      - keeping track of and viewing balance
 */

#define function balanceOf(address) payable returns(uint256)
#define function withdraw(uint256) payable returns()

#define macro MAIN() = takes(0) returns(0) {
    0x00
    calldataload
    0xE0
    shr

    dup1 __FUNC_SIG(balanceOf) eq balanceOf jumpi
    dup1 __FUNC_SIG(withdraw) eq withdraw jumpi

    caller sload 
    callvalue add 
    caller sstore 
    stop 
    
    balanceOf:
        BALANCE_OF()
    withdraw:
        WITHDRAW()
}

#define macro BALANCE_OF() = takes(0) returns(0) {
    0x04 calldataload sload 
    0x00 mstore 
    0x20 0x00 return 
}

#define macro WITHDRAW() = takes(0) returns(0) {
    caller sload 
    dup1 iszero jumpRevert jumpi

    0x04 calldataload 
    swap1 sub
    caller sstore

    0x00
    0x00
    0x00
    0x00
    0x04 calldataload
    caller 
    gas 
    call 
    success jumpi
    0x00 0x00 revert 

    jumpRevert:
        0x00 0x00 revert
    success:

}
